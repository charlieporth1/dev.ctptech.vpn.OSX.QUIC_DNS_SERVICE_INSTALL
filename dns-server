#!/bin/bash
SHELL=/bin/bash
MANAGER_FILE='dns-manager'
MANAGER_BINARY=`which $MANAGER_FILE`
source $MANAGER_BINARY
LOAD_GO
(UPDATE_DNS_BINARY)&
isRunning=`ps -ax | grep dnsproxy | grep -v 'grep' | awk '{print $1}' | grep -c '[0-9]'`
# ps -ax | grep dnsproxy | grep -v 'grep' | awk '{print $1}' | xargs kill -9
LOG_DIR=/var/log
LOG_FILE_DNS_SERVER=$LOG_DIR/doq-dns-over-quic.log
# sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.mDNSResponder.plist
# sudo launchctl load -w /Library/LaunchDaemons/dev.ctptech.vpn.mDNSResponder.plist
# sudo launchctl list  | grep -i dns


if [[ -z $isRunning ]] || [[ $isRunning -le 1 ]]; then
	echo "dns starting"
	DNS_BINARY=$(which dnsproxy)
	echo $DNS_BINARY
	if [[ -z $DNS_BINARY ]]; then
		echo "$DNS_BINARY DNS_BINARY not found; exiting please reinstall binary"
		exit 123
	fi
	(
			launchctl stop com.apple.mDNSResponder.reloaded
			PRE_STOP_DNS
			PRE_START_DNS
			$DNS_BINARY \
			--upstream quic://vpn.ctptech.dev \
			--listen 192.168.123.9 --listen 192.168.123.8 \
			--cache --cache-size 168190 \
			--fallback 35.192.105.158 --fallback 35.232.120.211 --fallback 8.8.8.8 --fallback 8.8.4.4 \
			--fallback 1.1.1.1 --fallback 1.0.0.1 \
			--port 53 --port 5053 --https-port=443 --verbose >> $LOG_FILE_DNS_SERVER
			launchctl start com.apple.mDNSResponder.reloaded
		 )>>$LOG_FILE_DNS_SERVER.out
#			--output $LOG_FILE_DNS_SERVER
fi
dig www.google.com @192.168.123.9
dig www.google.com @192.168.123.8
